# Backend Workshop
## HackDuke 2023

View me at [**bit.ly/hd23be**](https://bit.ly/hd23be)

---

<!-- 0. INTRO -->

## Who am I?

- Pratt '08 with a BSE in BME
- Worked in consulting and engineering at Accenture, Google and now [Galileo Health](https://galileo.io)
- Live in NYC with my wonderful wife

Note:

- Clock: 1m
- Chat about talk with Dean Simmons on changing majors

---

## Why are we here?

- Learn what an API is
- Write an API with Python

Note:

- Clock: 3m
- Session is interactive! I'm going to ask you questions and don't hesitate to ask me questions.
- Poll for experience writing an API
- Poll for experience working in Python

---

## Lab: Install Prerequisites

Make sure you have the following available on your machine:

1. Time: 5m
2. Install Git and Python
3. Pull and run the source code
4. Play with Git (time-permitting)

Note:

- Clock: 13m
- If you finish early, then help your neighbors!
- Docker optional
- TODO: jump to lab steps

---

<!-- 1. API BACKGROUND -->

## Background on APIs

- What is an API?
- What is HTTP?
- How do you secure an API?

----

### What is an API?

- Machine-to-machine interaction
- Structured requests and responses
- Usually either noun-oriented (REST) or verb-oriented (RPC)
  - REST is also about discoverability (see HATEOAS)

----

### What is HTTP?

- Application protocol for loading documents over a network connection
- Request-response
- Stateless

Note:

- We're going to come back to URLs when we discuss security

----

### HTTP Request

- URL
- Method
- Headers
- Cookies
- Body

----

### HTTP Request

URL <span style="opacity:0.1;">: Method : Headers : Cookies : Body</span>

_Uniform Resource Locators_ point to documents

![structure of a URL](assets/slides/mdn_url_all.png "Structure of a URL")

Credit: [MDN](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL)

----

### HTTP Request

<span style="opacity:0.1;">URL :</span> Method <span style="opacity:0.1;">: Headers : Cookies : Body</span>

![HTTP request methods](assets/slides/wikipedia_http_methods.png "HTTP request methods")

Credit: [Wikipedia](https://en.wikipedia.org/wiki/HTTP#Request_methods)

----

<section id="sample_side_by_side">
    <h2>Side By Side</h2>
    <div class="ulist">
        <img src="assets/slides/wikipedia_http_methods.png" alt="Websocket" width="50%" style="float: right">
        <ul style="width: 40%;">
            <li><p>Foo</li>
            <li><p>Bar</p></li>
            <li><p>Baz</p></li>
        </ul>
    </div>
</section>

Note:

- foo
- bar

----

### HTTP Response

- Status Codes
- Headers
- Body

---

## Demo code

```python
from foo import bar

def baz(quux: str) -> bool:
  return quux == "True"
```

---

## API Entities

<div class="mermaid">
  <pre>
    erDiagram
      User {
        int id
        string first_name
        string last_name
      }
      WeatherAlertConfig {
        int id
        int user_id
        string state_abbreviation
        enum severity "Add me!"
      }
      User ||--o{ WeatherAlertConfig : has
  </pre>
</div>

Our goal is going to be to include a severity toggle onto the
`WeatherAlertConfig`.
